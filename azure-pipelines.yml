# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

#steps:
#- script: echo Hello, world!
#  displayName: 'Run a one-line script'

#- script: |
#    echo Add other tasks to build, test, and deploy your project.
#    echo See https://aka.ms/yaml
#  displayName: 'Run a multi-line script'

jobs:
- job: Build
  displayName: Build 
  steps:
  - task: CopyFiles@2
    displayName: 'Copy Files to artifact staging directory'
    inputs:
      SourceFolder: '$(System.DefaultWorkingDirectory)'
#      Contents: '**/target/*.?(war|jar)'
      TargetFolder: $(Build.ArtifactStagingDirectory)
  - upload: $(Build.ArtifactStagingDirectory)
    artifact: drop

jobs:
- deployment: VMDeploy
  displayName: DeployOpenEdxTheme
  pool:
    vmImage: 'ubuntu-latest'
  environment:
    name: OpenEdx-Environment
    resourceType: VirtualMachine
  strategy:
    runOnce:
      preDeploy:
        steps:  
#        - publish: $(System.DefaultWorkingDirectory)/OpenEdxTheme
#          artifact: OpenEdxTheme
#        - download: current
#          artifact: OpenEdxTheme
#        - script: echo current artifact downloaded
         - task: DownloadPipelineArtifact@2
           displayName: 'Download Pipeline Artifact'
      deploy:
        steps:
        - script: | 
            echo my first deployment
#            cp '$(System.DefaultWorkingDirectory)/OpenEdxTheme' /home/edxbsv/.local/share/tutor/env/build/openedx/themes
